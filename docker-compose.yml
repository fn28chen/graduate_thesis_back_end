version: '3.5'

services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - nestjs_network
  nestjs-uploader:
    container_name: nestjs_container
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_EXPIRES: ${JWT_EXPIRES}
      ACCESS_TOKEN_EXPIRATION: ${ACCESS_TOKEN_EXPIRATION}
      REFRESH_TOKEN_EXPIRATION: ${REFRESH_TOKEN_EXPIRATION}
      REFRESH_JWT_EXPIRES: ${REFRESH_JWT_EXPIRES}
    ports:
      - "8080:8080"
    restart: always
    networks:
      - nestjs_network
    depends_on:
      - postgres

networks:
    nestjs_network:
